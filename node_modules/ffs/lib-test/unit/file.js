(function(){
  var $, pipeline, asText;
  $ = require('../../lib/file');
  pipeline = require('pinky-combinators').pipeline;
  asText = $.read('utf8');
  describe('λ read', function(){
    return o('Should return the contents of the file.', function(){
      return expect(asText('root/etc/hostname')).to.become('test\n');
    });
  });
  describe('λ write', function(){
    o('Should write data to a file.', function(){
      return pipeline([
        function(){
          return $.write('utf-8', 'root/etc/hostname', 'mana');
        }, function(){
          return expect(asText('root/etc/hostname')).to.become('mana');
        }
      ]);
    });
    return o('Should create the file if it doesnt exist.', function(){
      return pipeline([
        function(){
          return $.write('utf-8', 'root/etc/hosts', 'mana');
        }, function(){
          return expect(asText('root/etc/hosts')).to.become('mana');
        }
      ]);
    });
  });
  describe('λ append', function(){
    o('Should write data to the end of a file.', function(){
      return pipeline([
        function(){
          return $.append('utf-8', 'root/etc/hostname', 'mana');
        }, function(){
          return expect(asText('root/etc/hostname')).to.become('manamana');
        }
      ]);
    });
    return o('Should create the file if it doesnt exist.', function(){
      return pipeline([
        function(){
          return $.append('utf-8', 'root/etc/hosts1', 'mana');
        }, function(){
          return expect(asText('root/etc/hosts1')).to.become('mana');
        }
      ]);
    });
  });
}).call(this);
