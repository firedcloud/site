"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = processContainerEnv;

var _argsToMap = _interopRequireDefault(require("../../helpers/argsToMap"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function processContainerEnv({
  envs,
  config,
  inheritEnv
}) {
  const missing = [];
  const invalid = [];
  const values = {};
  const envsMap = (0, _argsToMap.default)(envs);
  Object.entries(config.environment || {}).forEach(([envName, env]) => {
    let value = envsMap[envName];

    if (inheritEnv && process.env[envName]) {
      value = process.env[envName];
    }

    if (typeof value === 'string') {
      values[envName] = value;
    } else if (env.required) {
      missing.push(envName);
    } else if (env.default) {
      values[envName] = value;
    }
  });
  Object.entries(config.environment || {}).forEach(([envName, env]) => {
    const value = values[envName];

    if (typeof value !== 'string' || !env.type) {
      // Non-existent, ignore
      return;
    }

    if (env.type === 'boolean' && !['false', 'true'].includes(value)) {
      invalid.push(envName);
    }

    if (env.type === 'int' && parseInt(value, 10).toString() !== value) {
      invalid.push(envName);
    }

    if (env.type === 'float' && parseFloat(value).toString() !== value) {
      invalid.push(envName);
    }
  });
  return {
    missing,
    invalid,
    values
  };
}