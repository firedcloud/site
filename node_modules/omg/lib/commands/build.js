"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = build;

var _config = require("../services/config");

var _docker = require("../services/docker");

var logger = _interopRequireWildcard(require("../logger"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

async function build({
  options
}) {
  const configPaths = await (0, _config.getConfigPaths)(options, true, true);
  const tagName = options.tag || (await (0, _docker.getImageName)({
    configPath: configPaths.docker
  })).name;
  logger.spinnerStart('Building Docker image');

  try {
    await (0, _docker.buildImage)({
      configPath: configPaths.docker,
      name: tagName,

      onLog(line) {
        if (options.raw) {
          logger.info(line);
        }
      }

    });
    logger.spinnerSucceed(`Built Docker image with name: ${tagName}`);
  } catch (error) {
    process.exitCode = 1;
    logger.spinnerFail('Error building Docker image');
    logger.error(error);
  }
}