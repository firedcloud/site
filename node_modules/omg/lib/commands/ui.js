"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ui;

var _open = _interopRequireDefault(require("open"));

var logger = _interopRequireWildcard(require("../logger"));

var _dashboard = require("../services/dashboard");

var _config = require("../services/config");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

async function ui({
  options
}) {
  const configPaths = await (0, _config.getConfigPaths)(options, true, !options.image);
  const microserviceConfig = await (0, _config.parseMicroserviceConfig)({
    configPath: configPaths.microservice,
    validate: false
  });
  logger.spinnerStart('Booting up UI');
  const dashboard = new _dashboard.Dashboard({
    image: options.image || null,
    inheritEnv: !!options.inheritEnv,
    configPaths,
    microserviceConfig
  });
  const {
    port
  } = await dashboard.start({
    port: parseInt(options.port || '', 10) || null
  });
  const serverUrl = `http://localhost:${port}/`;
  logger.spinnerSucceed(`Server is running at ${serverUrl}`);

  if (options.open) {
    await (0, _open.default)(serverUrl);
  }
}