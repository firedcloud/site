!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((n="undefined"!=typeof globalThis?globalThis:n||self).e={})}(this,(function(n){"use strict";const e=["string","bigint","number","boolean"];function t(n){return!("object"!=typeof n||!n)&&n.constructor===Object}function r(n){return e.includes(typeof n)}function o(n,e){return Math.floor(Math.random()*(e-n+1)+n)}function u(n,e){return Math.random()*(e-n)+n}n.calcPercentOfNum=function(n,e){return n*e/100},n.calcWhatPercent=function(n,e){return 100*n/e},n.chunk=function(n,e){if(e<1)throw new RangeError("chunkSize must be 1 or greater.");if(!Number.isInteger(e))throw new TypeError("chunkSize must be an integer.");const t=n.slice(),r=[];for(;t.length;)r.push(t.splice(0,e));return r},n.debounce=(n,e)=>{let t=null;return(...r)=>{null!==t&&(clearTimeout(t),t=null),t=setTimeout(()=>n(...r),e)}},n.deepClone=function n(e){if(null===e||r(e))return e;if(Array.isArray(e)){const t=[];for(const r of e)t.push(n(r));return t}if(t(e)){const t={};for(const[r,o]of Object.entries(e))t[r]=n(o);return t}if(e instanceof Map){const t=new e.constructor;for(const[r,o]of e.entries())t.set(r,n(o));return t}if(e instanceof Set){const t=new e.constructor;for(const r of e.values())t.add(n(r));return t}return e},n.increaseNumByPercent=function(n,e){return e<=0?n:n+n*(e/100)},n.isObject=t,n.isPrimitive=r,n.noOp=function(){},n.notEmpty=function(n){return null!=n},n.objectEntries=function(n){return Object.entries(n)},n.objectKeys=function(n){return Object.keys(n)},n.objectValues=function(n){return Object.values(n)},n.percentChance=function(n){return u(0,100)<n},n.primitiveTypes=e,n.randArrItem=function(n){return n[Math.floor(Math.random()*n.length)]},n.randFloat=u,n.randInt=o,n.reduceNumByPercent=function(n,e){return e<=0?n:n-n*(e/100)},n.roll=function(n){return 1===o(1,n)},n.round=function(n,e=1){const t=Math.pow(10,e||0);return Math.round(n*t)/t},n.shuffleArr=function(n){let e=[...n];for(let n=e.length-1;n>0;n--){const t=Math.floor(Math.random()*(n+1));[e[n],e[t]]=[e[t],e[n]]}return e},n.sleep=function(n){return new Promise(e=>setTimeout(e,n))},n.sumArr=function(n){return n.reduce((n,e)=>n+e,0)},n.uniqueArr=function(n){return[...new Set(n)]},Object.defineProperty(n,"__esModule",{value:!0})}));
//# sourceMappingURL=index.umd.js.map
