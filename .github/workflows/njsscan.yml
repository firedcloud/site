# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow integrates njsscan with GitHub's Code Scanning feature
# nodejsscan is a static security code scanner that finds insecure code patterns in your Node.js applications

name: njsscan sarif

on:

  push:
    branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]
  schedule:
    - cron: '* * * * *'

permissions:
  contents: read

jobs:
  njsscan:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    runs-on: self-hosted
    name: njsscan code scanning
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3
    - name: nodejsscan scan
      id: njsscan
      uses: ajinabraham/njsscan-action@7237412fdd36af517e2745077cedbf9d6900d711
      with:
        args: '. --sarif --output results.sarif || true'
    - name: Upload njsscan report
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: results.sarif
    - name: Cache
      uses: actions/cache@v3.0.3
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: "*"
        # An explicit key for restoring and saving the cache
        key: okand
        # The chunk size used to split up large files during upload, in bytes
        upload-chunk-size: 200
